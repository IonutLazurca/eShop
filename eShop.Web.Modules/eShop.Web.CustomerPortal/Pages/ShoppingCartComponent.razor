@page "/cart"

@inject IViewShoppingCartUseCase viewShoppingCartUseCase


<h3>Shopping Cart Component</h3>
@if (order != null && order.LineItems.Count > 0)
    {
        <div class="row">
            <div class="col-6">
                <ul>
                    @for (int i = 0; i < order.LineItems.Count; i++)
                    {
                        <LineItemComponent 
                                OnUpdateQuantity="HandleOnUpdateQuantity"
                                OnDeleteProduct="HandleOnDeleteProduct" 
                                LineItem="order.LineItems[i]">
                        </LineItemComponent>
                        @if (i < order.LineItems.Count - 1)
                        {
                            <li style="list-style:none">
                                <hr />
                            </li>
                        }
                    }
                </ul>

            </div>
             <div class="col">
                 <OrderSummaryComponent Order="order"></OrderSummaryComponent>
            </div>
        </div>
    }
    else
    {
        <div>
            <p>There is no product in the cart</p>
        </div>

    }


@code {

    private Order order { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            order = await viewShoppingCartUseCase.Execute();
            StateHasChanged();
        }
        else
        {
            return;
        }
    }

    private void HandleOnUpdateQuantity(Order order)
    {
        this.order = order;
    }

    private void HandleOnDeleteProduct(Order order)
    {
        this.order = order;
    }
}
